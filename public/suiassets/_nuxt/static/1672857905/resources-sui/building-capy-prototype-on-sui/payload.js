__NUXT_JSONP__("/resources-sui/building-capy-prototype-on-sui", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:[{pageTitle:"Building the Capy Prototype on Sui",excerpt:"As programmable objects on the Sui blockchain, Capys demonstrate principles such as asset ownership, transferability, and dynamic object fields. They appear in a player’s wallet along with accessories, including hats, bicycles, and scarves.",pageContent:"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fcapy.art\u002F\"\u003E\u003Cu\u003ESui Capys\u003C\u002Fu\u003E\u003C\u002Fa\u003E, Mysten Labs’ new prototype, serves as a developer preview and demonstrates key capabilities of the Sui ecosystem. In this decentralized game, players buy, trade, breed, and accessorize Capybaras, the cute South American semi-aquatic rodent. Sui developers can adapt many of the principles and code examples outlined here for their own projects.\u003C\u002Fp\u003E\u003Cp\u003EAs programmable objects on the Sui blockchain, \u003Ca href=\"https:\u002F\u002Fcapy.art\u002F\"\u003E\u003Cu\u003ECapys\u003C\u002Fu\u003E\u003C\u002Fa\u003E demonstrate principles such as asset ownership, transferability, and \u003Ca href=\"https:\u002F\u002Fsui.io\u002Fresources-sui\u002Fdynamic-fields-migration-guide\u002F\"\u003E\u003Cu\u003Edynamic object fields\u003C\u002Fu\u003E\u003C\u002Fa\u003E. They appear in a player’s wallet along with accessories, including hats, bicycles, and scarves. To preview Capys now, head to \u003Ca href=\"https:\u002F\u002Fcapy.art\u002F\"\u003E\u003Cu\u003ECapy.art\u003C\u002Fu\u003E\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cp\u003EDeveloping Sui Capys using Sui Move required defining the basic modules, creating types, and most importantly, building a registry to record and verify Capys. One unique feature of the prototype is the ability to breed two existing Capys, generating a completely new one based on characteristics of the breeding pair.\u003C\u002Fp\u003E\u003Cp\u003ETo reiterate, this is a developer preview to showcase unique aspects of Sui and for developers to reference when building projects of their own. Capys are not for sale.\u003C\u002Fp\u003E\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cstrong\u003EDisclaimers\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003EThis dApp is currently considered an early Alpha, so it may be a little rough around the edges.\u003C\u002Fli\u003E\u003Cli\u003EThe dApp runs on Sui's Devnet which does not have the maturity and stability of a Mainnet.\u003C\u002Fli\u003E\u003Cli\u003EThere is a \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FMystenLabs\u002Fsui\u002Fpull\u002F5652\"\u003E\u003Cu\u003Eknown Sui Wallet bug\u003C\u002Fu\u003E\u003C\u002Fa\u003E on transaction history when using Capys, and we'll be shipping a Wallet fix next week to address this.\u003C\u002Fli\u003E\u003Cli\u003EWe’re planning to update capy.art to the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FMystenLabs\u002Fsui\u002Ftree\u002Fmain\u002Fsdk\u002Fwallet-adapter\"\u003E\u003Cu\u003Ewallet adapter standard\u003C\u002Fu\u003E\u003C\u002Fa\u003E in the near future\u003C\u002Fli\u003E\u003Cli\u003ESui Capys is a demo specifically to inspire our developer community. This is \u003Cstrong\u003Enot\u003C\u002Fstrong\u003E an airdrop. Please faucet responsibly – do not spam our Devnet faucet.\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003ECapy Architecture\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EThe \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FMystenLabs\u002Fsui\u002Ftree\u002Fmain\u002Fsui_programmability\u002Fexamples\u002Fcapy\"\u003E\u003Cu\u003ECapy application (Github)\u003C\u002Fu\u003E\u003C\u002Fa\u003E consists of three modules: \u003Ccode\u003Ecapy\u003C\u002Fcode\u003E, \u003Ccode\u003Ecapy_items\u003C\u002Fcode\u003E, and \u003Ccode\u003Ecapy_market\u003C\u002Fcode\u003E. These modules define the Capys, accessories, and trading mechanism.\u003C\u002Fp\u003E\u003Cp\u003EWe began the development process by defining specific principles to make the prototype enjoyable and performant. The following principles helped determine the architecture and implementation choices:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003ECapys should be freely transferable and usable in any on-chain application.\u003C\u002Fli\u003E\u003Cli\u003ETypes should contain a minimum amount of data to maintain performance.\u003C\u002Fli\u003E\u003Cli\u003EEvents can be used to emit static data to be fetched by the indexer.\u003C\u002Fli\u003E\u003Cli\u003EThe prototype should be extendable so new properties can be added later.\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EDevelopers looking to build games and applications on Sui should begin by defining core concepts such as these, which will guide the development process.\u003C\u002Fp\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003ECapy Core\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EThe \u003Ccode\u003Ecapy\u003C\u002Fcode\u003E module defines the core functionality of Sui Capys: it defines a \u003Ccode\u003ECapy\u003C\u002Fcode\u003E type as well as granting the publisher with a \u003Ccode\u003ECapyManagerCap\u003C\u002Fcode\u003E, opening admin functions for the bearer. It defines \u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E, the centralized prototype state, and ways in which it can evolve.\u003C\u002Fp\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EType: Capy\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Ccode\u003ECapy\u003C\u002Fcode\u003E, the main type of the application, is an owned object with a defined set of attributes: 32 genes and additional utility information required for prototype features. \u003Ccode\u003ECapy\u003C\u002Fcode\u003E has two abilities, \u003Ccode\u003Ekey\u003C\u002Fcode\u003E and \u003Ccode\u003Estore\u003C\u002Fcode\u003E. The former makes it an own-able asset and the latter allows free transfer and wrapping.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003EThe \u003Ccode\u003Egen\u003C\u002Fcode\u003E property marks the Capy’s generation. First Capys have \u003Ccode\u003Egen 0\u003C\u002Fcode\u003E; newer breeds have their parents’ generation plus one, so \u003Ccode\u003Egen 1\u003C\u002Fcode\u003E, \u003Ccode\u003Egen 2\u003C\u002Fcode\u003E, etc.\u003C\u002Fli\u003E\u003Cli\u003EThe \u003Ccode\u003Esrc\u003C\u002Fcode\u003E property enables explorer display of the image. Capys themselves don’t store their full image as it is dynamic and can be changed when new items are added.\u003C\u002Fli\u003E\u003Cli\u003EThe \u003Ccode\u003Egenes\u003C\u002Fcode\u003E property stores the gene sequence, a 32-byte vector which is used to calculate attributes and selecting genes for a newborn during breeding.\u003C\u002Fli\u003E\u003Cli\u003EThe \u003Ccode\u003Eitem_count\u003C\u002Fcode\u003E is a utility property tracking the number of objects attached to each Capy.\u003C\u002Fli\u003E\u003Cli\u003EThe \u003Ccode\u003Eattributes\u003C\u002Fcode\u003E property stores human-readable attributes generated during breeding. For example, \u003Ccode\u003E{ “name\": \"pattern\", \"value\": \"panda\" }\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EThis set of fields is a minimal requirement for Sui Capys functions, including breeding or adding\u002Fremoving items.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FUntitled_f52e489afd\u002FUntitled_f52e489afd.png\" alt=\"Untitled.png\"\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F The Capy itself. Every Capy has its unique set of genes,\n\u002F\u002F\u002F as well as generation and utility information. Ownable, tradeable.\nstruct Capy has key, store {\n    id: UID,\n    gen: u64,\n    url: Url,\n    genes: Genes,\n    item_count: u8,\n    attributes: vector&lt;Attribute&gt;,\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EType: Capy Registry\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E, a shared object required for breeding, stores the total number of Capys ever born and contains a pseudo-random seed, described below in the Gene science section, used for gene selection during breeding. It contains all attribute definitions assigned to newborns at the breeding stage.\u003C\u002Fp\u003E\u003Cp\u003ENew attributes can be added to the prototype, as described in the admin features section below.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F Every capybara is registered here. CapyRegistry acts as a source of randomness\n\u002F\u002F\u002F as well as the storage for the main information about the game state.\nstruct CapyRegistry has key {\n    id: UID,\n    capy_born: u64,\n    capy_hash: vector&lt;u8&gt;,\n    genes: vector&lt;GeneDefinition&gt;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EType: CapyManagerCap\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EThe \u003Ccode\u003ECapyManagerCap\u003C\u002Fcode\u003E is a capability sent to the module publisher (the sender of the publishing transaction) when a module publishes. It authorizes admin actions in all of the modules, including \u003Ccode\u003Ecapy_items\u003C\u002Fcode\u003E and \u003Ccode\u003Ecapy_market\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EInitializer\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003ECapys are a standalone (non-generic) application, so their main logic can be launched in the module initializer. The \u003Ccode\u003Einit\u003C\u002Fcode\u003E function does two things:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003ECreates a \u003Ccode\u003ECapyManagerCap\u003C\u002Fcode\u003E and sends it to the module publisher.\u003C\u002Fli\u003E\u003Cli\u003ECreates and shares a \u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EAdmin Functions\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EFor the application to become playable and have some meaning, admin has to perform a set of actions:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003EThe \u003Ccode\u003Eadd_gene\u003C\u002Fcode\u003E function registers a new \u003Ccode\u003EGeneDefinition\u003C\u002Fcode\u003E in the \u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E. During breeding, all existing attributes in the registry are assigned to a new Capy. If a new \u003Ccode\u003EGeneDefinition\u003C\u002Fcode\u003E (Attribute) was added to the prototype, Capys born before this addition won’t get it, but their children will. Each gene definition has a name and a set of selectors which are used to choose the value of each attribute.\u003C\u002Fli\u003E\u003Cli\u003EThe \u003Ccode\u003Ebatch\u003C\u002Fcode\u003E function allows batch creation of Capys with predefined genes. It is used for initialization and in later stages to populate the marketplace with more Capys for new users.\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EBreeding\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EThe main piece of logic which creates unpredictability and helps prototype evolution is the \u003Ccode\u003Ecapy::breed\u003C\u002Fcode\u003E function. Any player with two Capys can perform this function. Logic for this function is the following:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003EBased on \u003Ccode\u003ECapyRegistry.capy_hash\u003C\u002Fcode\u003E select parent genes for the new \u003Ccode\u003ECapy\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\u003Cli\u003EGet list of current \u003Ccode\u003EGeneDefinitions\u003C\u002Fcode\u003E from the \u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E and set attributes.\u003C\u002Fli\u003E\u003Cli\u003EEmit an event with the new Capy’s data.\u003C\u002Fli\u003E\u003Cli\u003EReturn a new \u003Ccode\u003ECapy\u003C\u002Fcode\u003E (use \u003Ccode\u003Ebreed_and_keep\u003C\u002Fcode\u003E to send to sender).\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E public fun breed(\n    reg: &amp;mut CapyRegistry, c1: &amp;mut Capy, c2: &amp;mut Capy, ctx: &amp;mut TxContext\n): Capy {\n    let id = object::new(ctx);\n\n    \u002F\u002F Update capy hash in the registry\n    vec::append(&amp;mut reg.capy_hash, object::uid_to_bytes(&amp;id));\n    reg.capy_hash = hash(reg.capy_hash);\n\n    \u002F\u002F compute genes\n    let genes = compute_genes(&amp;reg.capy_hash, &amp;c1.genes, &amp;c2.genes, GENES);\n    let gen = math::max(c1.gen, c2.gen) + 1;\n    let attributes = get_attributes(&amp;reg.genes, &amp;genes);\n    let sender = tx_context::sender(ctx);\n\n    emit(CapyBorn { \u002F* ... *\u002F }); \n\n    \u002F\u002F Send newborn to parents.\n    Capy {\n        url: img_url(&amp;id),\n        id,\n        gen,\n        genes,\n        attributes,\n        item_count: 0,\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EGene Science\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EBefore we get to the most interesting part of the application, we must note that this solution does not provide absolute unpredictability, and therefore should not be used for applications with high stakes. But it does create some degree of randomness by turning user input into a pseudo-random modifier.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FUntitled_1_d1f3806d98\u002FUntitled_1_d1f3806d98.png\" alt=\"Untitled (1).png\"\u003E\u003C\u002Fp\u003E\u003Cp\u003EA really fun and unique feature of this prototype is the ability to \u003Ccode\u003Ebreed\u003C\u002Fcode\u003E two existing Capys to generate a third. The new Capy inherits characteristics of its parents.\u003C\u002Fp\u003E\u003Cp\u003EThe breed function takes two parent Capys and computes genes for the newborn. For this action to be fair and random, we need to have a selection algorithm and a seed. \u003Ccode\u003ECapyRegistry\u003C\u002Fcode\u003E provides the seed (stored as \u003Ccode\u003Ecapy_hash\u003C\u002Fcode\u003E) and is updated after each breed. The algorithm is the following:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002F83_C758_FA_D971_4_CAB_BE_6_D_346_DDA_6_B9_C5_F_1f14091b68\u002F83_C758_FA_D971_4_CAB_BE_6_D_346_DDA_6_B9_C5_F_1f14091b68.jpeg\" alt=\"83C758FA-D971-4CAB-BE6D-346DDA6B9C5F.jpeg\"\u003E\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003EUse hashing function (\u003Ccode\u003Esha3_256\u003C\u002Fcode\u003E) three times with salt to generate three vectors of 32 bytes (marked as A, B, and C) derived from the \u003Ccode\u003Ecapy_hash\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\u003Cli\u003EUse the first vector (A) for parent gene selection. If the value of the Nth byte is more than 126, select the first parent’s gene. Otherwise, select the second parent’s gene. As shown in the diagram above, the first gene will be P2, second P1, third P2, and fourth P1 again (up to N=32).\u003C\u002Fli\u003E\u003Cli\u003EThe second vector (B) defines a chance of mutation. If the value in position N is more than 250, use the same position in the third vector (C) to select a value for mutation. In this example, the third gene will mutate and its value will be 42.\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F Computes genes for the newborn based on the 'random' seed r0, and parents' genes.\n\u002F\u002F\u002F\n\u002F\u002F\u002F The `max` parameter affects how many genes should be changed.\n\u002F\u002F\u002F For example, if the number of genes is 32 but only 4 Attributes defined in the\n\u002F\u002F\u002F registry, the `max` should be set to 4. Remainder genes should not mutate.\nfun compute_genes(r0: &amp;vector&lt;u8&gt;, g1: &amp;Genes, g2: &amp;Genes, max: u64): Genes {\n    let i = 0;\n\n    let s1 = &amp;g1.sequence;\n    let s2 = &amp;g2.sequence;\n    let s3 = vec::empty();\n\n    let r1 = derive(r0, 1); \u002F\u002F for parent gene selection\n    let r2 = derive(r0, 2); \u002F\u002F chance of random mutation\n    let r3 = derive(r0, 3); \u002F\u002F value selector for random mutation\n\n    while (i &lt; max) {\n        let rng = *vec::borrow(&amp;r1, i);\n        let gene = if (lor(rng, 127)) {\n            *vec::borrow(s1, i)\n        } else {\n            *vec::borrow(s2, i)\n        };\n\n        \u002F\u002F There's a tiny chance that a mutation will happen.\n        if (lor(*vec::borrow(&amp;r2, i), MUTATION_CHANCE)) {\n            gene = *vec::borrow(&amp;r3, i);\n        };\n\n        vec::push_back(&amp;mut s3, gene);\n        i = i + 1;\n    };\n\n    Genes { sequence: s3 }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003ECapy Items\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EThis drastically simple module defines wearable items which can be added to each Capy, and how we implement the frontend display. Items can only be added by the Capy Admin, as it requires authorization with a \u003Ccode\u003ECapyManagerCap\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FUntitled_2_ff646e66a8\u002FUntitled_2_ff646e66a8.png\" alt=\"Untitled (2).png\"\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F Wearable item. Has special display in capy.art application\nstruct CapyItem has key, store {\n  id: UID,\n  url: Url,\n  type: String,\n  name: String,\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003EManaging Items\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EAdding and removing accessories to Capys makes use of \u003Ca href=\"https:\u002F\u002Fsui.io\u002Fresources-sui\u002Fdynamic-fields-migration-guide\u002F\"\u003E\u003Cu\u003Edynamic object fields\u003C\u002Fu\u003E\u003C\u002Fa\u003E, a more efficient and user-friendly replacement for parent-child objects in Sui. Dynamic Fields allow arbitrary names and can be added and removed on-the-fly.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cbr\u003EThe following code adds an item to a Capy:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003Eentry fun add_item&lt;T: key + store&gt;(capy: &amp;mut Capy, item: T) {\n    emit(ItemAdded&lt;T&gt; {\n        capy_id: object::id(capy),\n        item_id: object::id(&amp;item)\n    });\n\n    dof::add(&amp;mut capy.id, object::id(&amp;item), item);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003ECapy Market\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003ETo acquire and sell \u003Ccode\u003ECapy\u003C\u002Fcode\u003Es and \u003Ccode\u003ECapyItems\u003C\u002Fcode\u003E, we created the Capy Market. This module makes use of dynamic object fields and locks Items to be acquirable after paying their \u003Ccode\u003Eprice\u003C\u002Fcode\u003E. In this marketplace architecture, one marketplace object exists per one item type (\u003Ccode\u003ECapyMarket&lt;Capy&gt;\u003C\u002Fcode\u003E sells \u003Ccode\u003ECapy\u003C\u002Fcode\u003Es while a different object, \u003Ccode\u003ECapyMarket&lt;CapyItem&gt;\u003C\u002Fcode\u003E, sells Capy accessories), listings are attached to the marketplace as dynamic object fields, and listed objects are attached to Listings.\u003C\u002Fp\u003E\u003Cp\u003E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +--&gt; Listing --&gt; T\u003Cbr\u003ECapyMarket&lt;T&gt; &nbsp;+--&gt; Listing --&gt; T\u003Cbr\u003E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +--&gt; Listing --&gt; T\u003C\u002Fp\u003E\u003Cp\u003E&nbsp;\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EMarketplace and the List Function\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EEach Marketplace instance serves only one type. In this application, one instance of Marketplace exists for the \u003Ccode\u003ECapy\u003C\u002Fcode\u003E type and another for the \u003Ccode\u003ECapyItem\u003C\u002Fcode\u003E type.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F A generic marketplace for anything. T marks the type for Listings.\nstruct CapyMarket&lt;phantom T: key + store&gt; has key { id: UID }\n\n\u002F\u002F\u002F A listing for the marketplace. Contains the price and owner of the Listing.\nstruct Listing&lt;phantom T: key + store&gt; has key, store {\n    id: UID,\n    price: u64,\n    owner: address\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe \u003Ccode\u003EList\u003C\u002Fcode\u003E function makes use of \u003Ca href=\"https:\u002F\u002Fsui.io\u002Fresources-sui\u002Fdynamic-fields-migration-guide\u002F\"\u003E\u003Cu\u003EDynamic Fields\u003C\u002Fu\u003E\u003C\u002Fa\u003E. It makes a listed Item a field of a \u003Ccode\u003EListing\u003C\u002Fcode\u003E and then makes \u003Ccode\u003EListing\u003C\u002Fcode\u003E a field of \u003Ccode\u003ECapyMarket\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"language-rust\"\u003E\u002F\u002F\u002F List a new item on the `CapyMarket`.\npublic entry fun list&lt;T: key + store&gt;(\n    market: &amp;mut CapyMarket&lt;T&gt;,\n    item: T,\n    price: u64,\n    ctx: &amp;mut TxContext\n) {\n    let id = object::new(ctx);\n    let item_id = object::id(&amp;item);\n    let owner = tx_context::sender(ctx);\n\n    emit(ItemListed&lt;T&gt; { \u002F* ... *\u002F });\n\n    \u002F\u002F First attach Item to the Listing with a boolean `true` value;\n    \u002F\u002F Then attach listing to the marketplace through `item.id`;\n    dynamic_object_field::add(&amp;mut id, true, item);\n    dynamic_object_field::add(&amp;mut market.id, item_id, Listing&lt;T&gt; { \nid, price, owner \n});\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E&nbsp;\u003C\u002Fh4\u003E\u003Ch4\u003E\u003Cstrong\u003ECapy Inspiration\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp\u003EWe created the Capy prototype to show off some key Sui features and inspire developers in their own projects. Capys leverage Sui’s object-oriented nature to allow portable accessories that players can trade and buy, and the generation of new Capys based on parental attributes. We designed the prototype to be infinitely extendable so that it will delight users and developers alike.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:rgb(0,0,0);font-family:Arial;\"\u003EWe hope the examples and code here prove useful to Sui developers. A few implementations that should stand out include the Capy Market, Accessories, and Breeding. The Capy Market serves as a model for any trading or store mechanism. Accessories show a good use of \u003C\u002Fspan\u003E\u003Ca href=\"https:\u002F\u002Fsui.io\u002Fresources-sui\u002Fdynamic-fields-migration-guide\u002F\"\u003E\u003Cspan style=\"background-color:transparent;color:rgb(0,0,0);font-family:Arial;\"\u003E\u003Cu\u003EDynamic Fields\u003C\u002Fu\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003Cspan style=\"background-color:transparent;color:rgb(0,0,0);font-family:Arial;\"\u003E. Breeding offers a unique means of automatically generating new objects with infinite applications.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:rgb(0,0,0);font-family:Arial;\"\u003EHave fun and happy developing!\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cstrong\u003ELearn more about Sui\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fsui.io\u002F?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003ESui Website\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002F?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003ESui Developer Portal\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002Fbuild\u002Fmove?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003EMove Programming Language\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fsui.io\u002Fwhitepaper\"\u003E\u003Cu\u003ESui Whitepaper\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdiscord.gg\u002Fsui\"\u003E\u003Cu\u003ECommunity Forums\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FMystenLabs\u002Fsui\u002Ftree\u002Fmain\u002Fsui_programmability\u002Fexamples\u002Fcapy\"\u003E\u003Cu\u003ESui Capys Repo\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4 style=\"margin-left:0px;\"\u003E\u003Cstrong\u003EBuild with us!\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp style=\"margin-left:0px;\"\u003EWe’re excited about how the future unfolds and invite creators and builders to \u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002Fbuild?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003Ejoin us\u003C\u002Fu\u003E\u003C\u002Fa\u003E.&nbsp;\u003C\u002Fp\u003E",pageHeroImage:f,metaImage:f,pageUrl:a,catName:c,date:g,catSlug:b,author:d,posts:[{title:"Wishing You a Capy Holidays",link:"wishing-you-a-capy-holidays",excerpt:"#CapyHolidays! For the next two weeks, the Sui community can obtain limited-release Gift Boxes, each containing unique, event-specific attributes, accessories, and backgrounds to add some holiday excitement for Capys and share the joy of gifting. With this release, Sui Capys demonstrate mechanisms such as restricted transfers, unlockable game features, dynamic fields, and event-specific capabilities.\n",date:h,heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FCapy_Holidays_39ee7629b2\u002FCapy_Holidays_39ee7629b2.svg",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FCapy_Holidays_TN_4297429934\u002FCapy_Holidays_TN_4297429934.svg",categoryName:c,catRoute:[b],catId:a,author:d},{title:"SUI Token Community Access Program: FAQ",link:"sui-token-community-access-program-faq",excerpt:"Answers to the frequently asked questions about the SUI Token Community Access Program.",date:h,heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSUI_Cap_FAQ_ab96c93b8b\u002FSUI_Cap_FAQ_ab96c93b8b.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSUI_Cap_FAQ_TN_606c93355d\u002FSUI_Cap_FAQ_TN_606c93355d.png",categoryName:c,catRoute:[b],catId:a,author:e},{title:"Announcing the 2023 Sui Builder House World Tour",link:"2023-sui-builder-house-world-tour",excerpt:"Get ready for an exciting year of Sui Builder Houses around the world! You’ll want to save the dates and register early for our Builder Houses in places like Denver, Tokyo, Paris, and Singapore. ",date:"2022-12-15",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAnnouncing_2023_Sui_Builder_House_World_Tour_1_960cb701a7\u002FAnnouncing_2023_Sui_Builder_House_World_Tour_1_960cb701a7.svg",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAnnouncing_2023_Sui_Builder_House_World_Tour_TN_1_f2bc399649\u002FAnnouncing_2023_Sui_Builder_House_World_Tour_TN_1_f2bc399649.svg",categoryName:c,catRoute:[b],catId:a,author:e},{title:"SUI Token Allocation",link:"sui-token-allocation",excerpt:"Sui’s tokenomics have been designed to work hand-in-hand with Sui’s novel data model, object-centric architecture, and consensus algorithm. Sui’s Proof-of-Stake system ensures everyone can participate in network operations either directly through running a validator or indirectly through stake delegation. Sui’s Gas Price Mechanism delivers a competitive economic setting where blockspace is no longer priced as a luxury good but as a commodity for everyone to enjoy. Sui’s Storage Fund prices storage accurately so that Sui applications can leverage Sui’s ability to store data on-chain while keeping the network’s tokenomics healthy.",date:"2022-12-14",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSUI_Token_Allocation_Found_359e539960\u002FSUI_Token_Allocation_Found_359e539960.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSUI_Token_Allocation_Found_TN_adcc8bd4f8\u002FSUI_Token_Allocation_Found_TN_adcc8bd4f8.png",categoryName:"Tokenomics, Sui",catRoute:["resources-tokenomics",b],catId:a,author:e},{title:"SUI Token Community Access Program",link:"community-access-program",excerpt:"Broad sets of Sui builders want and need to own the SUI token to be able to participate in on-chain activity at mainnet launch and beyond. The Sui Foundation is thus designing the Community Access Program to enable Sui community members to access SUI tokens in the early phases of the network's lifespan. \n\nDecentralization and community-building are core elements in the Sui Foundation’s mission to promote, grow, and cultivate the holistic development of the Sui ecosystem. By ensuring a broad allocation of SUI tokens across Sui community members, the Community Access Program will hasten decentralization and diversify participants. ",date:"2022-12-07",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Access_Program_1e1d58029d\u002FSui_Access_Program_1e1d58029d.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Access_Program_TN_1f1c81c059\u002FSui_Access_Program_TN_1f1c81c059.png",categoryName:c,catRoute:[b],catId:a,author:e},{title:"Sui Testnet Wave 1 Recap",link:"sui-testnet-wave-1-recap",excerpt:"Sui Testnet Wave 1 came to an end on December 1, 2022 after a multi-week run. We successfully achieved our goal of practicing decentralized coordination and incident response on a geo-distributed Sui network with independent validators and node operators across eight time zones and 10 countries. We would like to express our utmost appreciation to the Sui Validators, operators, and users that made Wave 1 a success! ",date:"2022-12-05",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Testnet_Wave_1_Recap_f43b356119\u002FSui_Testnet_Wave_1_Recap_f43b356119.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Testnet_Wave_1_Recap_TN_16057e29d1\u002FSui_Testnet_Wave_1_Recap_TN_16057e29d1.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Supporting Decentralization and the Sui Community",link:"sui-delegation-program",excerpt:"The SUI Delegation Program will enable community members seeking to run a validator to apply for delegated SUI tokens from the Sui Foundation to bootstrap their validator operations. The Sui Foundation believes this program is a critical step in its mission towards decentralization and supporting the participation of Sui community members in Sui’s operations.",date:"2022-11-30",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Delegation_Program_1_53874af51c\u002FSui_Delegation_Program_1_53874af51c.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Delegation_Program_TN_2_1f433e0da6\u002FSui_Delegation_Program_TN_2_1f433e0da6.png",categoryName:c,catRoute:[b],catId:a,author:e},{title:"Sui Testnet Wave 1 Goes Live",link:"sui-testnet-wave-1-goes-live",excerpt:"We are thrilled to announce the start of Sui Testnet Wave 1, the first instance of a Sui Network with non-Mysten Labs operators, and an important step towards a decentralized Sui Mainnet. We conducted the genesis ceremony for the network on November 10, and we will keep the network running for approximately two weeks.",date:"2022-11-17",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Testnet_1_Live_TN_1_2c45f7e225\u002FSui_Testnet_1_Live_TN_1_2c45f7e225.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Testnet_1_Live_TN_48d247a57b\u002FSui_Testnet_1_Live_TN_48d247a57b.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Cryptography in Sui: Wallet Specifications",link:"cryptography-in-sui-wallet-specifications",excerpt:"Sui follows wallet specifications widely accepted in the cryptocurrency industry, such as BIP-32 (and its variation, SLIP-0010), BIP-44, and BIP-39. These specifications have become common in the cryptocurrency industry as a means for users to manage account keys.",date:"2022-11-08",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fcrypto_wallet_specs_eb284c6dc2\u002Fcrypto_wallet_specs_eb284c6dc2.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fcrypto_wallet_specs_TN_ef4a73b33e\u002Fcrypto_wallet_specs_TN_ef4a73b33e.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Cryptography in Sui",link:"cryptography-in-sui",excerpt:"As we launch Sui, we want to share our best practices on cryptography in Sui and why we support certain algorithms and primitives. Our philosophy applies to everything from user wallet key management to on-chain Move functions.",date:g,heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fintro_to_crypto_in_sui_801c6026f6\u002Fintro_to_crypto_in_sui_801c6026f6.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fintro_to_crypto_in_sui_TN_f384477099\u002Fintro_to_crypto_in_sui_TN_f384477099.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Introducing Sui Payment Transaction Types",link:"introducing-sui-payment-transaction-types",excerpt:"Our latest Sui release introduces three new native transaction types and deprecates three existing methods. The new APIs—Pay, PaySui, and PayAllSui—effectively replace TransferSui, SplitCoin, and MergeCoin.",date:"2022-11-02",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Payment_Transaction_Types_770630de61\u002FSui_Payment_Transaction_Types_770630de61.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Payment_Transaction_Types_TN_9316377c17\u002FSui_Payment_Transaction_Types_TN_9316377c17.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Introducing the Sui Foundation",link:"introducing-sui-foundation",excerpt:"The Sui Foundation promotes, grows, and cultivates the holistic development of the Sui ecosystem.",date:"2022-10-27",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fintro_Sui_Found_6c8e9eb853\u002Fintro_Sui_Found_6c8e9eb853.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fintro_Sui_Found_TN_f904ef40df\u002Fintro_Sui_Found_TN_f904ef40df.png",categoryName:c,catRoute:[b],catId:a,author:e},{title:"Dynamic Fields Migration Guide",link:"dynamic-fields-migration-guide",excerpt:" Dynamic Fields allow Sui Move developers to extend their structs with new data, on-the-fly.",date:"2022-10-25",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAnnouncing_Mist_07f0cd353e\u002FAnnouncing_Mist_07f0cd353e.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FBLOG_1_c1246560b0\u002FBLOG_1_c1246560b0.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"One SUI Coin Will Soon Equal a Billion MIST",link:"announcing-mist",excerpt:"Announcing MIST, the smallest unit of a SUI Coin. This new SUI division allows greater flexibility for SUI transactions. This introduction means that a Coin\u003CSUI\u003E with value of 1 equals 1 MIST, and 1 MIST equals 10^-9 of a SUI. In other words, 1 SUI equals 1 billion MIST.",date:"2022-10-20",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FIntroducing_Mist_7cfc8befa2\u002FIntroducing_Mist_7cfc8befa2.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FIntroducing_Mist_TNOG_e6615194ea\u002FIntroducing_Mist_TNOG_e6615194ea.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Recap 9\u002F1 Sui AMA: Sui Explorer & Wallet",link:"recap-sui-ama-sui-explorer-and-wallet",excerpt:"One of the really neat things about us building out an explorer is that it ends up being a really great testing ground for us to look at our APIs and make sure that we have data that can meet our user's needs. We want to build an explorer, obviously, for people to explore blockchain, but also, we want others to be able to build explorers and wallets in the space. In the Explorer, there are some really neat features that we've been able to build out because of the unique pieces of our blockchain, particularly the Move bytecode display, which allows you to see the actual bytecode that was deployed as part of that package and then within that code, you can kind of jump to definitions between packages.",date:"2022-10-17",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAMA_Explorer_Wallet_cd01d44580\u002FAMA_Explorer_Wallet_cd01d44580.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAMA_Explorer_Wallet_TN_97a1443b73\u002FAMA_Explorer_Wallet_TN_97a1443b73.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Recap 8\u002F18 Sui AMA: Business Development & Partnerships with Jameel Khalfan",link:"recap-sui-ama-business-development-partnerships",excerpt:"In this AMA recap, hear from Jameel Khalfan, Head of Consumer Partnerships at Mysten Labs, on all things partnerships and business development.",date:"2022-10-12",heroImage:i,image:i,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Sui Wallet Updates and Related Tools",link:"sui-wallet-updates",excerpt:"Today, we’re excited to announce updates for Sui Wallet. In addition to a refreshed look, you’ll find several refined features that will improve how you use and interact with the wallet.\n\nTwo months ago, we introduced Sui Wallet, an open -source Chrome extension self-custody wallet that acts as your portal to web3. ",date:"2022-09-26",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Wallet_Updates_49dcbf195a\u002FSui_Wallet_Updates_49dcbf195a.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Wallet_Updates_Small_731baafed0\u002FSui_Wallet_Updates_Small_731baafed0.png",categoryName:c,catRoute:[b],catId:a,author:d},{title:"Mysten Labs Series B Raise",link:"raise-announcement",excerpt:"Mysten Labs (“Mysten” or the “Company”), a web3 infrastructure company and developer of the Sui Layer 1 blockchain, today announced the initial close of its $300 million Series B funding round. This new capital values the Company at more than $2 billion. The Company intends to use the proceeds from the round to continue building out the core infrastructure to power web3’s next wave of applications and accelerate the adoption of the Sui ecosystem. ",date:"2022-09-08",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSeries_B_Raise_7a7cb2a901\u002FSeries_B_Raise_7a7cb2a901.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSeries_Raise_Thumb_78b07851bf\u002FSeries_Raise_Thumb_78b07851bf.png",categoryName:c,catRoute:[b],catId:a,author:"Evan Cheng"},{title:"Recap 8\u002F3 Sui AMA: Technical Writing with Randall & Clay",link:"recap-sui-ama-technical-writing",excerpt:"Exactly. What Randall and I do is work on the internal docs, just like we do with the external docs. A lot of tech writing groups will cordon things off and choose either internal or external docs. But we are dedicated to doing both and that's how we scale. We make it as easy as possible for people to do the right things for themselves, their careers, their users most importantly, and the product itself. We do this by supplying processes, templates, and guidance, as well as direct help writing the materials ourselves. Whatever is needed. ",date:"2022-09-06",heroImage:j,image:j,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Recap 7\u002F21 Sui AMA: Unlocking Opportunities on Sui with Adeniyi Abiodun",link:"recap-sui-ama-adeniyi-abiodun",excerpt:"It's a real battle-tested platform that has people beating the hell out of it through the process of figuring out bugs. Testing out the capacity of the platform, making sure it can handle the load, and making sure the storage and everything else scales will be all part of the incentivized Testnet. There'll be multiple ways for these internal devices to make sure that each one of them targets particular characteristics of the Sui platform and to make sure that by the time we go to Mainnet, it's been battle-tested. People will be able to really build the apps that we've promised that they can build and we feel really confident about that. The community is engaged with the team who's really passionate about building really scalable and well-engineered platforms for the masses. So that is something we want to do with the community, and we think all of you are going to be really useful in helping us validate some of the claims that we've made, and making sure that the Sui platform can be something for everybody.",date:"2022-08-30",heroImage:k,image:k,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Recap 7\u002F7 Sui AMA: Gaming with Koh Kim",link:"recap-sui-ama-gaming",excerpt:"Sui assets are now modeled as objects where attributes can be defined, or the objects can be combined into new objects. In a game, you can have a sword that gathers experience points to increase levels where the points and levels are defined as attributes. You can also combine different items like a sword and jewel to make a new sword. All of this can be recorded on-chain. Outside the game, it has implications for the distribution, payments, and marketing as these activities always have intermediary platforms taking a cut of the revenue. ",date:"2022-08-26",heroImage:l,image:l,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Meet the Sui Explorer",link:"meet-the-sui-explorer",excerpt:"Sui's emergence as a game-changing layer one amidst a burgeoning sea of pre-existing blockchains signal a new era of web3 infrastructure. This new era is made possible by Sui's mission to provide the infrastructure that will support the development of a wide range of applications, from dynamic games to secure DeFi protocols, all with unrivaled speed and incredibly low cost. \n\nAs part of Sui’s vision to create infrastructure to support the developers on-boarding the next billion users  to web3, we released the Sui Explorer to act as a trusted transparency tool for Sui users and builders.  Explorers are an essential part of any L1 platform, serving as inspection and analytics tools for users and developers to troubleshoot, confirm their activities and verify holdings on-chain.",date:"2022-08-25",heroImage:m,image:m,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Full Node & Validator Selection Announcement",link:"full-node-and-validator-selection-announcement",excerpt:"The Sui community has come to life! We have received 28,000 validator applications from more than 80 countries. We could not be more excited to see this level of engagement! \n",date:"2022-08-24",heroImage:n,image:n,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Validator Registration Open",link:"validator-registration-open",excerpt:"Earlier in June, we announced Sui Incentivized Testnet. We're happy to share that registration to participate in Sui Incentivized Testnet is now open! If you are a validator, developer or Sui Enthusiast, we highly encourage you to apply and join our incentivized testnet journey.",date:"2022-08-02",heroImage:o,image:o,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Announcing Sui Wallet",link:"introducing-sui-wallet",excerpt:"The open-sourced Sui Wallet gives Sui users the ability to create an address, view and manage assets on the Sui network, and interact with dApps. The Sui Wallet serves as a reference implementation for other potential wallets and applications in the Sui ecosystem. To that end it will showcase the latest and most unique Sui capabilities. We believe the Sui Wallet repo will act as an important ecosystem enablement tool as Sui starts to support at scale use cases, Move-powered ownership models, and other features unique to Sui.",date:"2022-07-15",heroImage:p,image:p,categoryName:c,catRoute:[b],catId:a,author:"Bauer Wann"},{title:"Announcing Sui Incentivized Testnet",link:"announcing-sui-incentivized-testnet",excerpt:"Sui’s Testnet will steadily progress from the first multi-entity Sui network toward a decentralized mainnet operated by an evolving set of independent and distributed validators. The Testnet will gradually introduce and stress-test the key features, mechanisms required for a decentralized, production-ready Sui network. The Testnet aims to validate our designs, test our validator, full node, wallet, and developer toolchains, and build operational experience with a cohesive group of high-quality operators. We will graduate from Testnet to mainnet when we are fully confident in the security and performance of our software, have seen sustained operational excellence from our initial validators, and validate our developer experience via compelling Move-powered applications deployed on Testnet.",date:"2022-06-30",heroImage:q,image:q,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Announcing Sui Fullnode",link:"announcing-sui-fullnode",excerpt:"Mysten Labs welcomes you to run your own Sui fullnode on DevNet. This is another step forward in providing robust services to developers and businesses to #buildonsui.",date:"2022-06-15",heroImage:r,image:r,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Recap 6\u002F9 Sui AMA: Cryptography with Kostas Chalkias",link:"recap-sui-ama-cryptography",excerpt:"First, we have one of the fastest consensus algorithms and mempool; it’s Narwhal & Tusk. And second, there are some applications that can completely avoid full consensus and bypass it. For example, you can check out what we call Single Writer Friendly (SWF) applications. We have this different model of like ownership and certain objects, and the way you can combine it. Some of the assets can move from one place to the other, from one consensus to another method. And this is what makes a huge difference on our blockchain Sui.",date:"2022-06-14",heroImage:s,image:s,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Sui DevNet Public Release",link:"sui-dev-net-public-release",excerpt:"Mysten Labs is pleased to announce the release of public Sui DevNet! This is the first of several Sui test networks we will launch and a big step in offering robust services to developers and businesses.",date:"2022-05-05",heroImage:t,image:t,categoryName:c,catRoute:[b],catId:a,author:d},{title:"Sui Dynamic NFTs to Enhance Gameplay",link:"sui-dynamic-nf-ts-to-enhance-gameplay",excerpt:"With Sui, we believe game developers should not be limited by the platform performance or fees, and they should be able to create whatever experience they imagine. Importantly, developing great games should not require game developers to also be experts in writing smart contracts. Rather they should focus on what they are good at, building cool games for gamers.",date:"2022-03-22",heroImage:u,image:u,categoryName:c,catRoute:[b],catId:a,author:d}]}],fetch:{},mutations:[]}}(void 0,"resources-sui","Sui","Mysten Labs","Sui Foundation","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FCapy_Blog_Header_f834f76685\u002FCapy_Blog_Header_f834f76685.png","2022-11-03","2022-12-19","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002F081822_Business_4ab2670771\u002F081822_Business_4ab2670771.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002F080322_Technical_Writing_AMA_163f957aaa\u002F080322_Technical_Writing_AMA_163f957aaa.gif","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FAdeniyi_AMA_0c41c2b876\u002FAdeniyi_AMA_0c41c2b876.gif","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002F070722_AMA_Koh_1_8046ec52a3\u002F070722_AMA_Koh_1_8046ec52a3.gif","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Explorer_f5c383be2f\u002FSui_Explorer_f5c383be2f.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FValidator_Close_06640a57be\u002FValidator_Close_06640a57be.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FTwitter_post_16_54b48a4f3f\u002FTwitter_post_16_54b48a4f3f.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FTwitter_post_13_1_498ef1cac2\u002FTwitter_post_13_1_498ef1cac2.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fsui_incentivized_testnet_5a4c8e57fb\u002Fsui_incentivized_testnet_5a4c8e57fb.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fannouncing_sui_fullnode_737e3a38be\u002Fannouncing_sui_fullnode_737e3a38be.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSUI_Update_f7710094aa\u002FSUI_Update_f7710094aa.gif","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Dev_Net_42f85c7968\u002FSui_Dev_Net_42f85c7968.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002Fsui_monstars_5e9c26a940\u002Fsui_monstars_5e9c26a940.png")));