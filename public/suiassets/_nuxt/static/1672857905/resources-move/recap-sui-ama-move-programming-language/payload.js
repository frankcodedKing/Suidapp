__NUXT_JSONP__("/resources-move/recap-sui-ama-move-programming-language", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {data:[{pageTitle:"Recap 7\u002F28 Sui AMA: Move Programming Language",excerpt:"Normally in a blockchain environment, all transactions are sort of ordered, even ones that aren't related. For example, Alice is sending a coin to Bob and says I am also sending some coins to Adam and Emma, those transactions aren't related but in a normal blockchain, you have to wait for all of them to go through consensus in the same order. It’s just kind of silly, so in Sui, we have this object model that lets us know if those operations are related or not so we can run them in parallel and in the original form of Move. To add on top of that, we also have different ownership models and different storage models that will also provide additional security over ownership. So, if you own something, no one can take it from you.",pageContent:"\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EIntroduction:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EKoh:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EWelcome everyone to today’s AMA session, my name is Koh and in today’s session, we will talk about the Move programming language. Now, I’ll let the team share their interest. Let’s start with you Damir.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI'm fighting to make my official title in the company to be the Move Guy but for now, I'm just the Move software engineer.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI have been working on Move since 2018. I wrote the source language and some other compiler stuff. I've dabbled in other various things on Move, whether it be the VM or tooling. Now, I’m more focused on the way we've been integrating Move on Sui.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EAdam:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI'm also on the Move team and my current focus is on developer experience and tooling. My recent work was on improving the status of our Visual Studio Code plugin for Move and it’s now much better than it was a couple of months ago.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EEmma:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI've been working full-time on the Move team since 2020. Most of my contributions are to the Move prover, I also wrote a lot of formal specs for the Diem framework. Right now, I’m contributing to Move and writing a lot of code for our Sui Core Framework.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #1: Is the language object-oriented or what architectural approach is recommended to use when creating an application?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI'll say that object-oriented is a loaded term. There are objects in the\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EMove core language; we’ve added things that we call objects on the Sui side of things. I think they behave like objects in some sense but you're not going to find the object-oriented programming style that you might expect if you're coming from Java or other object-oriented languages. You might expect interfaces or inheritance or dynamic dispatch, or virtual functions, all that sort of stuff, but it's not there.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThe thing that we do have for objects is more from a storage model perspective. We have individual kinds of packets of data that are of a given type with an ID and we call those objects.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #2: Do you support translators that anyone outside of Move can use, and how are you planning to apply this?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EAdam:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EMove is a different language and it's not just about syntax. If you look at different programming languages, there are common features like loops, variables, functions, etc but if you look a little bit deeper into the space of languages that target blockchains, the differences are that they can run quite deep. That's the same situation with Move and other languages that you might want to use to program smart contracts for different blockchains. Most security properties, for example, it's an inability for analysis, the way it manages memory, and the way it manages storage. All these things are quite different from most other languages.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ESo I would say, at the very least, it’s nontrivial and in some cases, probably also impossible to just write a transpiler or a translator that would take code written in one language that targets a blockchain and magically spits out Move code that would just work.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #3: How does Move help improve smart contracts for Sui? And, how do you achieve that security, especially with scale?&nbsp;\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EEmma\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ECompared to other languages, Move was designed for the blockchain use case. It borrows a lot of security features from languages like Rust and it also is designed to be more formally verifiable from the ground up. We plan to specify the core Move codes that handle like, how do we distribute rewards. How do we transfer money? This will also help with security.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EAdam:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThe languages to write smart contracts were available at the time when Move language was created, just didn't have built-in safety properties. Everything has to happen by sort of explicit programming intervention. With Sui Move, many things are enforced by the compiler, or by the prover as Emma already mentioned. However, even without the prover, the properties that you would like to preserve like no double spending, they're just built into the language. That's kind of the main advantage and difference between some of these traditional older blockchain languages like Solidity.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #4: What advantages does Move have over specific other languages?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EMove is an asset-centric language, meaning it provides you a way to define an asset type, something valuable on the network, and that is the main difference that gives Move expressivity. In most other languages, you have to invent the meaning of an asset, instead of defining and saying this is an asset that can take multiple steps. Move allows you to achieve it in a really short, simple, and straightforward way.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ESo besides the assets, the question here is, why do I need a blockchain-specific language? And why can't I just use Go or Rust or WebAssembly or something else? I think assets are a part of that answer but we also have:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003EDeterminism: If you just throw Rust or Go at this thing, the languages are not deterministic and you'll have to do a lot of work to try to make that true. You’ll end up building a sub-language inside of this thing and you're probably not going to be using any of the libraries you'd like to use in the past. You’re losing utility by building an entirely different environment of a language within the same language.\u003C\u002Fli\u003E\u003Cli\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EMetering: You want to make sure that you're not using more resources for the computation of the network than you've paid for and that the network is determined and fair for you to use. Paying for them is one way but you need the ability to meter the execution and to be able to say, I've done X amount of computation, and you owe me this much in order to pay for it.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #5: What updates are you most excited about in the new Move version? And how can developers take advantage of that?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThe big one of the Sui optics is parallelism. Normally in a blockchain environment, all transactions are sort of ordered, even ones that aren't related. For example, Alice is sending a coin to Bob and says I am also sending some coins to Adam and Emma, those transactions aren't related but in a normal blockchain, you have to wait for all of them to go through consensus in the same order. It’s just kind of silly, so in Sui, we have this object model that lets us know if those operations are related or not so we can run them in parallel and in the original form of Move.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ETo add on top of that, we also have different ownership models and different storage models that will also provide additional security over ownership. So, if you own something, no one can take it from you. However, in solidity and possibly in core Move, if there is a bug this module cannot access your object.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EKoh:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThank you. There were a lot of follow-up questions on parallelism, especially with the shared object versus a single object. Does anyone want to provide input on that in particular?\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EOkay, what happens if I want a lot of people to access the same object? We have two methodologies for doing that on Sui:\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003EYou can have a shared object that anyone can access; it might be a transaction or some modification on the object. In this case, we're gonna have to go through consensus, like you're used to. However, we only need the consensus over that shared object o other objects can still be running in parallel. Moreover, we can run in parallel with other shared objects.&nbsp;\u003C\u002Fli\u003E\u003Cli\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EYou can have a situation like, I'm done with this object, all the data is immutable, I'm not changing it. I just want other people to pull data from it and their own transactions immutably. So you can make this read-only object and call that freezing to an Immutable object.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #6: What are the courses available for the Move language?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EIf you want to learn Sui Move, I'd say just go straight into Sui documentation. We have everything written down step by step. You can just try this code and deploy it on the network.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EWe also have a nice resource if you know a bit about coding. There are a set of \u003C\u002Fspan\u003E\u003Ca href=\"https:\u002F\u002Fexamples.sui.io\u002F\"\u003E\u003Cu\u003Eexamples\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E to help you get started. It covers most of the main features of the Sui Move specifically but when you look at them, you kind of get the point because most of the examples are really sharp.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EAdam:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ETwo pieces of clarification from my side: don't be scared about the dependencies. I think that the main problem with installing dependencies is on Windows, so the instructions are obviously there. This should be even simpler and all of this is available online for free, all the documentation is open, and we also welcome contributions. Visit the \u003C\u002Fspan\u003E\u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002F\"\u003E\u003Cu\u003ESui Developer Portal\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E, find our documentation and start hacking.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EQuestion #7: What is the long-term vision for Move? And where are we going moving forward?\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThere are a lot of different things we could talk about, I will try to hit on a lot of them.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003EWe're looking at expanding the usability of the language and keeping our eye on the expressiveness of the language. We need better developer tooling, whether it be tools that you might expect like auto-formatting or the increasingly making it easier to write tests.\u003Cbr\u003E&nbsp;\u003C\u002Fli\u003E\u003Cli\u003EThere's a long stream of work to do on getting people to learn the language as we're talking. On the prover side of things, we still have to get the prover fully working and integrated into Sui Move to make it easier for people to write.\u003Cbr\u003E&nbsp;\u003C\u002Fli\u003E\u003Cli\u003EThere’s also the usability of the language. There are things that, again, we take for granted in other languages, whether it be nice little syntax tricks like index access into vectors using brackets and for loops in general.&nbsp;\u003Cbr\u003E&nbsp;\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EEmma:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThere are also things we want to improve upon Sui Move, for example,\u003Cstrong\u003E improving the object model\u003C\u002Fstrong\u003E a little bit by introducing different types of ownership.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003ERight now, we are not able to pass a vector of objects into an entry function, and it's affecting our expressiveness a little bit. There are some codes that I'm not able to arrive at because of lack of that, so we're also working on improving those things.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EAdam:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EIt’s all up to you where the language is going to go, meaning&nbsp;\u003Cstrong\u003Eyou developers\u003C\u002Fstrong\u003E,&nbsp;\u003Cstrong\u003Eyou the community\u003C\u002Fstrong\u003E, and we welcome feedback. In fact, we hope that our work in the future in addition to what we think is good for the language and good for the ecosystem, we hope to be driven by what the actual people that use the language feel is important for the language in the ecosystem.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EAt this point, a lot of people ask us about the language and we don't know. We can't know at this point in time, because all of us have been involved with the language for a long time. We don't know the beginning or the path to the language. So, ideally, please submit some feedback. If you go through the tutorial and don't understand something, please send us a message so we know that this is not clear.&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EKoh:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThat was all the questions we had but let's take a few minutes to get questions from the audience if there are any.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ECommunity Member #1:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EHi everyone. I want to get a nice synthesized view of this idea of the theory. I obviously have ERC 20, and ERC 721, and I kind of like the idea that in Sui Move that's maybe not necessary, or it seems like theorems are very interfaced-centric. Whereas, in Move, it's type centric almost based on the idea of generics, and statically verifiable. If you could just talk about that and how you envision token standards evolving?&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003EDamir:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EOkay. So interfaces exist in the Solidity world, just so people know that this code that kind of builds a token is actually a token. Since having the coin type basically says that this is ERC 20 or this is a Sui coin and so we have this alignment between all coins and they all behave the same way. Regarding ERC 721, or other NFT standards, we also don't need them because every object by default is what people usually call NFT, even the coin itself, just one coin with some value is an NFT in some way. We don't say that this coin is the only coin that can exist because we assume that there will be projects that will create their own coins. It will be a different type, it will behave differently, and it might have some authorities that manage this coin or just some ways to work with this coin like imagining the coin that can only be displayed twice in-house, it is implementable.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EOne of the great things about coins is that generally, you want all your coins to behave the same way. The whole point of the standard is that you're on the solidity side of things so you're like, I want to be able to do these operations of recording and you probably want them to work the natural way of like splitting and joining and all this sort of thing. So you don't have to go out of your way to write your own module, you just write a struct.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ECommunity Member #2:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EI've got a quick question about publishing modules that contract when it comes to updating or changing them. For example, using proxy contracts in solidity, is that the case? Or is it a matter of just sort of touching on the wrapping capabilities on how you build it out? Maybe some thoughts around that?\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E\u003Cstrong\u003ETodd:\u003C\u002Fstrong\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EYeah, we've been talking about this a lot recently. I'll say that you can, depending on the object, you could do a proxy setup. All I'm saying is that you can write a new module that uses existing assets. Depending on the things exposed in the existing module, you can essentially write version 2 of it or at least have some wrapping behavior. We are looking into the problem of trying to fully replace a package with a new version of the code.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EThere are some security concerns that come with this like, how do you make sure that someone's not doing something nefarious or evil and trying to steal existing assets? How do you make sure that they aren't introducing new bugs or that there's a whole set of problems there?&nbsp;\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003EWe're just trying to work out all the details and trying to answer some of these questions.\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Cp style=\"text-align:center;\"\u003E\u003Cspan style=\"background-color:transparent;color:#000000;font-family:Arial;\"\u003E. &nbsp; . &nbsp; .\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003Ch4 style=\"margin-left:0px;\"\u003E\u003Cstrong\u003ELearn more about Sui\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fsui.io\u002F?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003ESui Website\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002F?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003ESui Developer Portal\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002Fbuild\u002Fmove?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003EMove Programming Language\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fsui.io\u002Fwhitepaper\"\u003E\u003Cu\u003ESui Whitepaper\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdiscord.gg\u002Fsui\"\u003E\u003Cu\u003ECommunity forums\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4 style=\"margin-left:0px;\"\u003E\u003Cstrong\u003EBuild with us!!\u003C\u002Fstrong\u003E\u003C\u002Fh4\u003E\u003Cp style=\"margin-left:0px;\"\u003EWe’re excited about how the future unfolds and invite creators and builders to \u003Ca href=\"https:\u002F\u002Fdocs.sui.io\u002Fbuild?utm_source=medium&amp;utm_medium=social&amp;utm_campaign=devnet\"\u003E\u003Cu\u003Ejoin us\u003C\u002Fu\u003E\u003C\u002Fa\u003E.&nbsp;\u003C\u002Fp\u003E",pageHeroImage:e,metaImage:e,pageUrl:a,catName:d,date:"2022-09-01",catSlug:b,author:c,posts:[{title:"Recap 8\u002F10 Move AMA: Move Programming Language with Mysten Engineers",link:"recap-sui-mysten-engineers",excerpt:"Move is an evolution of ideas that were present in the first generation of smart contract languages. So, it's similar to evolution in terms of thinking about safety and security that happened between C and even C++ languages that were developed and implemented. ",date:"2022-10-05",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FMove_Programming_AMA_2_a3034611ac\u002FMove_Programming_AMA_2_a3034611ac.gif",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FMove_Programming_Language_AMA_5ff16269db\u002FMove_Programming_Language_AMA_5ff16269db.png",categoryName:d,catRoute:[b],catId:a,author:c},{title:"Recap 7\u002F14 Sui AMA: Move Programming Language with Mysten Dev Team",link:"recap-sui-mysten-dev-team",excerpt:"I think what's unique about Move is that it brings interesting things (that have been done) from the world of smart contracts languages that are around other than Solidity. It also brings some very interesting concepts from more traditional programming languages. For example, the way the assets are encoded in Move is different than it has been traditionally done as far as I understand. Every time you create in Move, you essentially create an NFT with all the rich properties that you can modify. Move has been designed around this concept of being able to share code easily, which is why we integrated this concept of packages and modules. This allows you to write and publish source code somewhere that people kind of know what they're seeing on the chain, but then you don't have to copy and paste. There's this kind of notion of the language being both expressive enough, but also minimal enough that it helps with finding bugs and writing tools. ",date:"2022-08-29",heroImage:e,image:e,categoryName:d,catRoute:[b],catId:a,author:c},{title:"Meet the Sui Explorer",link:"meet-the-sui-explorer",excerpt:"Sui's emergence as a game-changing layer one amidst a burgeoning sea of pre-existing blockchains signal a new era of web3 infrastructure. This new era is made possible by Sui's mission to provide the infrastructure that will support the development of a wide range of applications, from dynamic games to secure DeFi protocols, all with unrivaled speed and incredibly low cost. \n\nAs part of Sui’s vision to create infrastructure to support the developers on-boarding the next billion users  to web3, we released the Sui Explorer to act as a trusted transparency tool for Sui users and builders.  Explorers are an essential part of any L1 platform, serving as inspection and analytics tools for users and developers to troubleshoot, confirm their activities and verify holdings on-chain.",date:"2022-08-25",heroImage:g,image:g,categoryName:h,catRoute:[i,f,b,j],catId:a,author:c},{title:"Full Node & Validator Selection Announcement",link:"full-node-and-validator-selection-announcement",excerpt:"The Sui community has come to life! We have received 28,000 validator applications from more than 80 countries. We could not be more excited to see this level of engagement! \n",date:"2022-08-24",heroImage:k,image:k,categoryName:h,catRoute:[i,f,b,j],catId:a,author:c},{title:"Recap 6\u002F30 Sui AMA: Move Programming Language with Sam Blackshear",link:"recap-sui-with-sam-blackshear",excerpt:"So, we actually don't use a custom variant of Move. The nature of Move is an interesting language. We've intentionally designed it as this cross platform language where there's a core language that isn't specific to any blockchain. It has things like strux, booleans, integers and addresses, but it doesn't have a notion of accounts, transactions, the cryptography that's used by a given platform, or the consensus that's used by a given platform – all these things are abstracted away.",date:"2022-07-27",heroImage:l,image:l,categoryName:d,catRoute:[b],catId:a,author:c},{title:"Why We Created Sui Move",link:"why-we-created-sui-move",excerpt:"Move is a cross-platform, embedded language. The core language itself is very simple: it has generic concepts like structs, integers, and addresses, but does not have blockchain-specific concepts like accounts, transactions, time, cryptography, etc. These features must be provided by the blockchain platform that integrates Move. Importantly, these blockchains do not need their own fork of Move—each platform uses the same Move VM, bytecode verifier, compiler, prover, package manager, and CLI, but adds blockchain-specific features via code that builds on top of these core components. ",date:"2022-07-12",heroImage:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FTwitter_post_12_61a41e329c\u002FTwitter_post_12_61a41e329c.png",image:"https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FTwitter_post_12_1_c20108ee19\u002FTwitter_post_12_1_c20108ee19.png",categoryName:d,catRoute:[b],catId:a,author:"Sam Blackshear"},{title:"Announcing Enhanced Move VSCode Plugin",link:"announcing-enhanced-move-vs-code-plugin",excerpt:"The VSCode plugin for Move is called move-analyzer and it is available in the Visual Studio Marketplace. The new features are supported via the Language Server Protocol; in order to unleash the full potential of the plugin, in addition to installing the plugin itself, you also need to install move-analyzer’s language server as described in installation instructions provided with the plugin distribution.",date:"2022-07-05",heroImage:m,image:m,categoryName:d,catRoute:[b],catId:a,author:c},{title:"Announcing Sui Tokenomics",link:"announcing-sui-tokenomics",excerpt:"Today, we are equally excited to share the design of Sui’s economics and incentives — also known as Sui’s tokenomics. In the same spirit of Sui’s engineering design, Sui’s economic model has been designed at the frontier of blockchain economic and incentives research. The overarching goal has been to implement an economic system aligning incentives across the various entities participating in the Sui ecosystem. The aim is for Sui’s financial plumbing to be at par with its engineering design so that our smart contracts platform delivers a flourishing economy with billions of participants.",date:"2022-05-24",heroImage:n,image:n,categoryName:"Tokenomics, Move",catRoute:[f,b],catId:a,author:c}]}],fetch:{},mutations:[]}}(void 0,"resources-move","Mysten Labs","Move","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FMove_AMA_e5071cf7d1\u002FMove_AMA_e5071cf7d1.gif","resources-tokenomics","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Explorer_f5c383be2f\u002FSui_Explorer_f5c383be2f.png","Narwhal & Tusk, Tokenomics, Move, Sui","resources-narwhal-tusk","resources-sui","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FValidator_Close_06640a57be\u002FValidator_Close_06640a57be.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002F063022_Move_AMA_8e10aebda2\u002F063022_Move_AMA_8e10aebda2.gif","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FEnhanced_VS_Code_8c11327fe8\u002FEnhanced_VS_Code_8c11327fe8.png","https:\u002F\u002Fstorage.googleapis.com\u002Fsui-cms-content\u002FSui_Tokenomics_8e646e8727\u002FSui_Tokenomics_8e646e8727.png")));